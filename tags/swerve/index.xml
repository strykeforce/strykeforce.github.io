<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swerve on Stryke Force Engineering Blog</title>
    <link>https://strykeforce.github.io/tags/swerve/</link>
    <description>Recent content in Swerve on Stryke Force Engineering Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Oct 2017 09:01:49 -0400</lastBuildDate>
    
	<atom:link href="https://strykeforce.github.io/tags/swerve/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Third Coast Telemetry Swerve</title>
      <link>https://strykeforce.github.io/posts/thirdcoast-telemetry-swerve/</link>
      <pubDate>Fri, 20 Oct 2017 09:01:49 -0400</pubDate>
      
      <guid>https://strykeforce.github.io/posts/thirdcoast-telemetry-swerve/</guid>
      <description>Using the Third Coast Telemetry Service and Swerve Drive together is simple. Put the following into robotInit() to configure the drive Talons for monitoring.
private final TelemetryService telemetryService = new TelemetryService(); private final SwerveDrive swerve = SwerveDrive.getInstance(); @Override public void robotInit() { swerve.configure(telemetryService); telemetryService.start(); // ... } This will set the Talon status frame update rates on the CAN bus to default values as specified in the javadoc for TelemetryService.</description>
    </item>
    
    <item>
      <title>Third Coast Java Library</title>
      <link>https://strykeforce.github.io/posts/thirdcoast/</link>
      <pubDate>Tue, 17 Oct 2017 09:48:58 -0400</pubDate>
      
      <guid>https://strykeforce.github.io/posts/thirdcoast/</guid>
      <description>Our Third Coast swerve drive, talon configuration and telemetry API for FRC robots is available from its repository.
Documentation Third Coast Javadocs.</description>
    </item>
    
    <item>
      <title>Thirdcoast Swerve</title>
      <link>https://strykeforce.github.io/posts/thirdcoast-swerve/</link>
      <pubDate>Tue, 17 Oct 2017 13:52:49 -0400</pubDate>
      
      <guid>https://strykeforce.github.io/posts/thirdcoast-swerve/</guid>
      <description>This software is designed to run on swerve drive hardware described in this paper. The swerve drive is controlled using the SwerveDrive class. Derivation of inverse kinematic equations are from Ether&amp;rsquo;s Swerve Kinematics and Programming.
The swerve-drive inverse kinematics algorithm will always calculate individual wheel angles as -0.5 to 0.5 rotations, measured clockwise with zero being the straight-ahead position. Wheel speed is calculated as 0 to 1 in the direction of the wheel angle.</description>
    </item>
    
  </channel>
</rss>